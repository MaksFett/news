version: '3.8'

services:
    nginx:
        image: nginx:1.15
        container_name: nginx
        volumes:
            - ../:/var/www
            - ./nginx-dev.conf:/etc/nginx/conf.d/default.conf
        ports:
            - 80:80
        networks:
            - my-network
        depends_on:
            - server
            - client
    client:
        build:
            context: ../client
            dockerfile: Dockerfile
        container_name: client
        command: npm start
        volumes:
            - ../client:/usr/app
            - /usr/app/node_modules
        networks:
            my-network:
                aliases:
                    - client
        command: npm start
        stdin_open: true
        ports:
            - "3000:3000"
    server:
        build:
            context: ../
            dockerfile: server/Dockerfile
        container_name: server
        command: gunicorn --bind 0.0.0.0:5000 --workers 4 --pythonpath /var/www/ "server.app:app"
        volumes:
            - ../server:/var/www/server
        networks:
            my-network:
                aliases:
                    - server
        expose:
            - 5000
        ports:
            - "5000:5000"
        depends_on:
            - postgres
        links:
            - postgres:postgres
    postgres:
        container_name: postgres
        image: postgres:13.4-alpine
        ports:
          - "5432:5432"
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=12345
          - POSTGRES_DB=postgres
          - POSTGRES_HOST_AUTH_METHOD=trust
          - PGDATA=/var/lib/postgresql/data/pgdata
        volumes:
          - postgres:/var/lib/postgresql/data
        networks:
          my-network:
            aliases:
              - postgres
    postgres_backup:
        container_name: postgres_backup
        image: postgres:13.4-alpine
        expose:
          - "5433"
        ports:
          - "5433:5433"
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=12345
          - POSTGRES_DB=postgres
          - POSTGRES_HOST_AUTH_METHOD=trust
          - PGDATA=/var/lib/postgresql/data/pgdata
        volumes:
          - postgres_backup:/var/lib/postgresql/data
        command: -p 5433
        networks:
          my-network:
            aliases:
              - postgres_backup
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:8.11
        environment:
          - PGADMIN_DEFAULT_EMAIL=admin@pgadmin.com
          - PGADMIN_DEFAULT_PASSWORD=password
          - PGADMIN_LISTEN_PORT=80
        ports:
          - 15432:80/tcp
        volumes:
          - pgadmin:/var/lib/pgadmin
        depends_on:
          - postgres
          - postgres_backup
        networks:
          my-network:
            aliases:
              - pgadmin
volumes:
    postgres:
    postgres_backup:
    pgadmin:
networks:
    my-network:
        driver: bridge